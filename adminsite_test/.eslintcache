[{"C:\\W\\ReactFolder\\adminsite_test\\src\\index.js":"1","C:\\W\\ReactFolder\\adminsite_test\\src\\layouts\\Admin.js":"2","C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Footers\\AdminFooter.js":"3","C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Navbars\\AdminNavbar.js":"4","C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Sidebar\\Sidebar.js":"5","C:\\W\\ReactFolder\\adminsite_test\\src\\routes.js":"6","C:\\W\\ReactFolder\\adminsite_test\\src\\variables\\charts.js":"7","C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Headers\\Header.js":"8","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\Dashboard.js":"9","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\joboffer\\jobOffer.js":"10","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\joboffer\\addModal.js":"11","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Joboffer\\JobOffer.js":"12","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Joboffer\\AddModal.js":"13","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Clients\\Clients.js":"14","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Employee\\Employee.js":"15","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Services\\Services.js":"16","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Person\\Person.js":"17","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobTime\\JobTime.js":"18","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\ContactUs\\ContactUs.js":"19","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Settings\\Settings.js":"20","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Clients\\AddModal.js":"21","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Employee\\AddModal.js":"22","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Services\\AddModal.js":"23","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobTime\\AddModal.js":"24","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Clients\\EditModal.js":"25","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobLevel\\JobLevel.js":"26","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\RequiredAssessment\\RequiredAssessment.js":"27","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Joboffer\\EditModal.js":"28","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobTime\\EditModal.js":"29","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobLevel\\AddModal.js":"30","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobLevel\\EditModal.js":"31","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Services\\EditModal.js":"32","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Category\\Category.js":"33","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Employee\\EditModal.js":"34","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Category\\AddModal.js":"35","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Category\\EditModal.js":"36","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Category\\AddSkillModal.js":"37","C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Headers\\UserHeader.js":"38","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Profile\\Profile.js":"39","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Profile\\EditModal.js":"40"},{"size":634,"mtime":1609206842050,"results":"41","hashOfConfig":"42"},{"size":1882,"mtime":1609201798448,"results":"43","hashOfConfig":"42"},{"size":753,"mtime":1607640604941,"results":"44","hashOfConfig":"42"},{"size":2639,"mtime":1609202616565,"results":"45","hashOfConfig":"42"},{"size":5707,"mtime":1609181860740,"results":"46","hashOfConfig":"42"},{"size":2659,"mtime":1609206739036,"results":"47","hashOfConfig":"42"},{"size":9927,"mtime":1607389815247,"results":"48","hashOfConfig":"42"},{"size":6798,"mtime":1609074692031,"results":"49","hashOfConfig":"42"},{"size":3718,"mtime":1609075449990,"results":"50","hashOfConfig":"42"},{"size":4314,"mtime":1607717786226,"results":"51","hashOfConfig":"42"},{"size":1059,"mtime":1607717794852,"results":"52","hashOfConfig":"42"},{"size":7161,"mtime":1609166582537,"results":"53","hashOfConfig":"42"},{"size":3904,"mtime":1608721816784,"results":"54","hashOfConfig":"42"},{"size":6782,"mtime":1609112051627,"results":"55","hashOfConfig":"42"},{"size":8128,"mtime":1609174707753,"results":"56","hashOfConfig":"42"},{"size":7266,"mtime":1609168377791,"results":"57","hashOfConfig":"42"},{"size":4272,"mtime":1609112097512,"results":"58","hashOfConfig":"42"},{"size":7115,"mtime":1609167245641,"results":"59","hashOfConfig":"42"},{"size":4342,"mtime":1609112059867,"results":"60","hashOfConfig":"42"},{"size":4385,"mtime":1609112121122,"results":"61","hashOfConfig":"42"},{"size":7207,"mtime":1607824934395,"results":"62","hashOfConfig":"42"},{"size":6379,"mtime":1609184461397,"results":"63","hashOfConfig":"42"},{"size":3899,"mtime":1609168023013,"results":"64","hashOfConfig":"42"},{"size":3896,"mtime":1609167076951,"results":"65","hashOfConfig":"42"},{"size":8386,"mtime":1607878488662,"results":"66","hashOfConfig":"42"},{"size":7162,"mtime":1609170749741,"results":"67","hashOfConfig":"42"},{"size":0,"mtime":1608581965625,"results":"68","hashOfConfig":"42"},{"size":4785,"mtime":1609165024528,"results":"69","hashOfConfig":"42"},{"size":4759,"mtime":1609167201400,"results":"70","hashOfConfig":"42"},{"size":3910,"mtime":1609170486913,"results":"71","hashOfConfig":"42"},{"size":4783,"mtime":1609170660885,"results":"72","hashOfConfig":"42"},{"size":4763,"mtime":1609168298987,"results":"73","hashOfConfig":"42"},{"size":8325,"mtime":1609188442347,"results":"74","hashOfConfig":"42"},{"size":4783,"mtime":1609173447447,"results":"75","hashOfConfig":"42"},{"size":3931,"mtime":1609186948217,"results":"76","hashOfConfig":"42"},{"size":4828,"mtime":1609182636333,"results":"77","hashOfConfig":"42"},{"size":5231,"mtime":1609188335133,"results":"78","hashOfConfig":"42"},{"size":1106,"mtime":1609207306482,"results":"79","hashOfConfig":"42"},{"size":19677,"mtime":1609256158034,"results":"80","hashOfConfig":"42"},{"size":11615,"mtime":1609256034882,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1jhsqlk",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"84"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"84"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"C:\\W\\ReactFolder\\adminsite_test\\src\\index.js",[],["178","179"],"C:\\W\\ReactFolder\\adminsite_test\\src\\layouts\\Admin.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Footers\\AdminFooter.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Navbars\\AdminNavbar.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Sidebar\\Sidebar.js",["180","181","182","183","184","185","186","187","188","189","190","191"],"import React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\nimport { PropTypes } from \"prop-types\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={this.closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n  render() {\n    const { bgColor, routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {logo ? (\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n              <h1 className=\"navbar-brand-img\">GFA</h1> \n            </NavbarBrand>\n          ) : null}\n          <Nav className=\"align-items-center d-md-none\">\n            <UncontrolledDropdown nav>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-calendar-grid-58\" />\n                  <span>Activity</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-support-16\" />\n                  <span>Support</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            <Form className=\"mt-4 mb-3 d-md-none\">\n              <InputGroup className=\"input-group-rounded input-group-merge\">\n                <Input\n                  aria-label=\"Search\"\n                  className=\"form-control-rounded form-control-prepended\"\n                  placeholder=\"Search\"\n                  type=\"search\"\n                />\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <span className=\"fa fa-search\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </Form>\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    innerLink: PropTypes.string,\n    outterLink: PropTypes.string,\n    imgSrc: PropTypes.string.isRequired,\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;\n","C:\\W\\ReactFolder\\adminsite_test\\src\\routes.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\variables\\charts.js",[],["192","193"],"C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Headers\\Header.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\Dashboard.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\joboffer\\jobOffer.js",["194"],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\joboffer\\addModal.js",["195","196","197","198","199"],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Joboffer\\JobOffer.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Joboffer\\AddModal.js",["200"],"import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nclass AddModal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Snackbaropen :false,\r\n            Snackbarmsg:'',\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    SnackbarClose =(e) =>{\r\n        this.setState({\r\n          Snackbaropen:false\r\n        });\r\n      }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch('http://127.0.0.1:5000/add_job_offer/',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Access-Control-Allow-Origin':'*'\r\n            },\r\n            body:JSON.stringify({\r\n                name_job_offer:event.target.JobName.value\r\n            })\r\n        })\r\n        .then(res =>res.json())\r\n        .then((result) => {\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'added successfully'\r\n            });\r\n        },\r\n        (error)=>{\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'Failed'\r\n            });\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                open={this.state.Snackbaropen}\r\n                autoHideDuration={3000}\r\n                onClose={this.SnackbarClose}\r\n                message ={<span id=\"massage-id\">{this.state.Snackbarmsg}</span>}\r\n                action={[\r\n                    <IconButton \r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.SnackbarClose}\r\n                    >\r\n                    x\r\n                    </IconButton>\r\n                ]}\r\n            /> \r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Job Offer\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container\">\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId = \"JobName\">\r\n                                    <Form.Label>Job Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"JobName\"\r\n                                        required\r\n                                        placeholder=\"Job Name\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Add Job Name\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddModal;","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Clients\\Clients.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Employee\\Employee.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Services\\Services.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Person\\Person.js",["201","202"],"import React from \"react\";\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport '../style.css';\nimport {Alert } from 'react-bootstrap';\n\nimport {\n  Card,\n  CardHeader,\n  Table,\n  Container,\n  Row,\n  Button,\n} from \"reactstrap\";\n\nclass Person extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n        offset: 0,\n        tableData: [],\n        orgtableData: [],\n        perPage: 5,\n        currentPage: 0\n    }\n    this.handlePageClick = this.handlePageClick.bind(this);\n  }\n\n  handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    const offset = selectedPage * this.state.perPage;\n\n    this.setState({\n        currentPage: selectedPage,\n        offset: offset\n    }, () => {\n        this.loadMoreData()\n    });\n  };\n\n  loadMoreData() {\n  const data = this.state.orgtableData;\n  const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n    this.setState({\n      pageCount: Math.ceil(data.length / this.state.perPage),\n      tableData:slice\n    })\n  }\n\n  getData() {\n    axios\n    .get(`https://jsonplaceholder.typicode.com/albums`)\n    .then(res => {\n      var data = res.data;\n      var slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n      this.setState({\n        pageCount: Math.ceil(data.length / this.state.perPage),\n        orgtableData :res.data,\n        tableData:slice\n      })\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"header bg-gradient-blue pb-8 pt-5 pt-md-8\">\n          <Container fluid>\n            <div className=\"header-body\">\n            </div>\n          </Container>\n        </div>\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <div className=\"col\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <h3 className=\"mb-0\">Tables</h3>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                  <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Country</th>\n                      <th scope=\"col\">Education</th>\n                      <th scope=\"col\">Gender</th>\n                      <th scope=\"col\">Date of birthday</th>\n                      <th scope=\"col\">Attach CV</th>\n                      <th scope=\"col\">Attach Vedio</th>                     \n                      <th scope=\"col\">Notes</th>\n                      <th scope=\"col\">Public Rate</th>\n                      <th scope=\"col\">Employee Name</th>   \n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {this.state.tableData.map((tdata,i) => (\n                    <tr>\n                      <td>{tdata.id}</td>\n                      <td>{tdata.title}</td>\n                      <td>{tdata.title}</td>\n                      <td>{tdata.title}</td>\n                      <td>{tdata.title}</td>\n                      <td>{tdata.title}</td>\n                      <td>{tdata.title}</td>\n                      <td>{tdata.title}</td>\n                      <td>{tdata.title}</td>\n                      <td>{tdata.title}</td>\n                      <td>{tdata.title}</td>\n                      <td>{tdata.title}</td>\n                    </tr>\n                    )\n                  )}\n                  </tbody>\n                </Table>\n              </Card>\n            </div>\n          </Row>\n          <ReactPaginate\n                    previousLabel={\"prev\"}\n                    nextLabel={\"next\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={this.state.pageCount}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={this.handlePageClick}\n                    containerClassName={\"pagination\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"}/>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Person;\n","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobTime\\JobTime.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\ContactUs\\ContactUs.js",["203"],"import React from \"react\";\r\nimport axios from 'axios';\r\nimport ReactPaginate from 'react-paginate';\r\nimport '../style.css';\r\nimport {Alert } from 'react-bootstrap';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nclass ContactUs extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n        offset: 0,\r\n        tableData: [],\r\n        orgtableData: [],\r\n        perPage: 5,\r\n        currentPage: 0\r\n    }\r\n    this.handlePageClick = this.handlePageClick.bind(this);\r\n  }\r\n\r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.state.perPage;\r\n\r\n    this.setState({\r\n        currentPage: selectedPage,\r\n        offset: offset\r\n    }, () => {\r\n        this.loadMoreData()\r\n    });\r\n  };\r\n\r\n  loadMoreData() {\r\n  const data = this.state.orgtableData;\r\n  const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\r\n    this.setState({\r\n      pageCount: Math.ceil(data.length / this.state.perPage),\r\n      tableData:slice\r\n    })\r\n  }\r\n\r\n  getData() {\r\n    axios\r\n    .get(`https://jsonplaceholder.typicode.com/albums`)\r\n    .then(res => {\r\n      var data = res.data;\r\n      var slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\r\n      this.setState({\r\n        pageCount: Math.ceil(data.length / this.state.perPage),\r\n        orgtableData :res.data,\r\n        tableData:slice\r\n      })\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"header bg-gradient-default pb-8 pt-5 pt-md-8\">\r\n          <Container fluid>\r\n            <div className=\"header-body\">\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Container className=\"mt--7\" fluid>\r\n          <Row>\r\n            <div className=\"col\">\r\n              <Card className=\"shadow\">\r\n                <CardHeader className=\"border-0\">\r\n                  <h3 className=\"mb-0\">Tables</h3>\r\n                </CardHeader>\r\n                <Table className=\"align-items-center table-flush\" responsive>\r\n                  <thead className=\"thead-light\">\r\n                  <tr>\r\n                      <th scope=\"col\">#</th>\r\n                      <th scope=\"col\">Name</th>\r\n                      <th scope=\"col\">Service Type</th>\r\n                      <th scope=\"col\">Employee name(responded)</th>\r\n                      <th scope=\"col\">Phone</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Address</th>\r\n                      <th scope=\"col\">Note</th>\r\n                      <th scope=\"col\">Status</th>\r\n                      <th scope=\"col\">Actions</th>\r\n                      <th scope=\"col\" />\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  {this.state.tableData.map((tdata,i) => (\r\n                    <tr>\r\n                      <td>{tdata.id}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>\r\n                        <Button variant=\"success\" onClick={() => this.props.editProduct(tdata.id)} style={{color:\"green\"}}>Edit</Button>\r\n                      </td>\r\n                    </tr>\r\n                    )\r\n                  )}\r\n                  </tbody>\r\n                </Table>\r\n              </Card>\r\n            </div>\r\n          </Row>\r\n          <ReactPaginate\r\n                    previousLabel={\"prev\"}\r\n                    nextLabel={\"next\"}\r\n                    breakLabel={\"...\"}\r\n                    breakClassName={\"break-me\"}\r\n                    pageCount={this.state.pageCount}\r\n                    marginPagesDisplayed={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={this.handlePageClick}\r\n                    containerClassName={\"pagination\"}\r\n                    subContainerClassName={\"pages pagination\"}\r\n                    activeClassName={\"active\"}/>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactUs;\r\n","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Settings\\Settings.js",["204"],"import React from \"react\";\r\nimport axios from 'axios';\r\nimport ReactPaginate from 'react-paginate';\r\nimport '../style.css';\r\nimport {Alert } from 'react-bootstrap';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nclass Settings extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n        offset: 0,\r\n        tableData: [],\r\n        orgtableData: [],\r\n        perPage: 5,\r\n        currentPage: 0\r\n    }\r\n    this.handlePageClick = this.handlePageClick.bind(this);\r\n  }\r\n\r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.state.perPage;\r\n\r\n    this.setState({\r\n        currentPage: selectedPage,\r\n        offset: offset\r\n    }, () => {\r\n        this.loadMoreData()\r\n    });\r\n  };\r\n\r\n  loadMoreData() {\r\n  const data = this.state.orgtableData;\r\n  const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\r\n    this.setState({\r\n      pageCount: Math.ceil(data.length / this.state.perPage),\r\n      tableData:slice\r\n    })\r\n  }\r\n\r\n  getData() {\r\n    axios\r\n    .get(`https://jsonplaceholder.typicode.com/albums`)\r\n    .then(res => {\r\n      var data = res.data;\r\n      var slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\r\n      this.setState({\r\n        pageCount: Math.ceil(data.length / this.state.perPage),\r\n        orgtableData :res.data,\r\n        tableData:slice\r\n      })\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"header bg-gradient-dark pb-8 pt-5 pt-md-8\">\r\n          <Container fluid>\r\n            <div className=\"header-body\">\r\n              <Button variant=\"primary\" style={{color:\"blue\"}}>Hide</Button>\r\n              <Button variant=\"success\" style={{color:\"green\"}}>Change</Button>\r\n              <Button variant=\"danger\" style={{color:\"red\"}}>Edit</Button>\r\n              <Button variant=\"danger\" style={{color:\"black\"}}>Save</Button>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Container className=\"mt--7\" fluid>\r\n          <Row>\r\n            <div className=\"col\">\r\n              <Card className=\"shadow\">\r\n                <CardHeader className=\"border-0\">\r\n                  <h3 className=\"mb-0\">Tables</h3>\r\n                </CardHeader>\r\n                <Table className=\"align-items-center table-flush\" responsive>\r\n                  <thead className=\"thead-light\">\r\n                  <tr>\r\n                      <th scope=\"col\">#</th>\r\n                      <th scope=\"col\">Name</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Linkedin</th>\r\n                      <th scope=\"col\">Level</th>\r\n                      <th scope=\"col\">Phone</th>\r\n                      <th scope=\"col\">Country</th>\r\n                      <th scope=\"col\">Job</th>\r\n                      <th scope=\"col\">Company Name</th>\r\n                      <th scope=\"col\" />\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  {this.state.tableData.map((tdata,i) => (\r\n                    <tr>\r\n                      <td>{tdata.id}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                    </tr>\r\n                    )\r\n                  )}\r\n                  </tbody>\r\n                </Table>\r\n              </Card>\r\n            </div>\r\n          </Row>\r\n          <ReactPaginate\r\n                    previousLabel={\"prev\"}\r\n                    nextLabel={\"next\"}\r\n                    breakLabel={\"...\"}\r\n                    breakClassName={\"break-me\"}\r\n                    pageCount={this.state.pageCount}\r\n                    marginPagesDisplayed={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={this.handlePageClick}\r\n                    containerClassName={\"pagination\"}\r\n                    subContainerClassName={\"pages pagination\"}\r\n                    activeClassName={\"active\"}/>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settings;\r\n","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Clients\\AddModal.js",["205"],"import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nclass AddModal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Snackbaropen :false,\r\n            Snackbarmsg:'',\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    SnackbarClose =(e) =>{\r\n        this.setState({\r\n          Snackbaropen:false\r\n        });\r\n      }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch('http://localost:3000/..',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                ClientID:null,\r\n                UserName:event.target.UserName.value,\r\n                Email:event.target.Email.value,\r\n                Number:event.target.Number.value,\r\n                CompaneEmail:event.target.CompaneEmail.value,\r\n                Country:event.target.Country.value,\r\n                Note:event.target.Note.value,\r\n                ServiceName:event.target.ServiceName.value,\r\n            })\r\n        })\r\n        .then(res =>res.json())\r\n        .then((result) => {\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'added successfully'\r\n            });\r\n        },\r\n        (error)=>{\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'Failed'\r\n            });\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                open={this.state.Snackbaropen}\r\n                autoHideDuration={3000}\r\n                onClose={this.SnackbarClose}\r\n                message ={<span id=\"massage-id\">{this.state.Snackbarmsg}</span>}\r\n                action={[\r\n                    <IconButton \r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.SnackbarClose}\r\n                    >\r\n                    x\r\n                    </IconButton>\r\n                ]}\r\n            /> \r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Clients\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container\">\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId = \"UserName\">\r\n                                    <Form.Label>User Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"UserName\"\r\n                                        required\r\n                                        placeholder=\"UserName\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId = \"Email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        name=\"Email\"\r\n                                        required\r\n                                        placeholder=\"Email\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId = \"Number\">\r\n                                    <Form.Label>Number</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"number\"\r\n                                        name=\"Number\"\r\n                                        required\r\n                                        placeholder=\"Number\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId = \"CompaneEmail\">\r\n                                    <Form.Label>Compane Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        name=\"CompaneEmail\"\r\n                                        required\r\n                                        placeholder=\"CompaneEmail\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId = \"Country\">\r\n                                    <Form.Label>Country</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"Country\"\r\n                                        required\r\n                                        placeholder=\"Country\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId = \"Note\">\r\n                                    <Form.Label>Note</Form.Label>\r\n                                    <Form.Control\r\n                                        as=\"textarea\" rows={3}\r\n                                        name=\"Note\"\r\n                                        required\r\n                                        placeholder=\"Note\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId = \"ServiceName\">\r\n                                    <Form.Label>Service Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"ServiceName\"\r\n                                        required\r\n                                        placeholder=\"ServiceName\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Add Client\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddModal;","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Employee\\AddModal.js",["206"],"import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nclass AddModal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Snackbaropen :false,\r\n            Snackbarmsg:'',\r\n            email:'',\r\n            password: '',\r\n            confirmPassword: '',\r\n            level:'',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    SnackbarClose =(e) =>{\r\n        this.setState({\r\n          Snackbaropen:false\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n    \r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        const { password, confirmPassword } = this.state;\r\n        if (password !== confirmPassword) {\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:\"Password doesn't match\"\r\n            });\r\n        } else {\r\n            fetch('http://localost:3000/add_employee/',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                email_employee:event.target.Email.value,\r\n                password_employee:event.target.Password.value,\r\n                level_employee:event.target.Level.value,\r\n            })\r\n        })\r\n        .then((result) => {\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'added successfully'\r\n            });\r\n        },\r\n        (error)=>{\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'Failed'\r\n            });\r\n        })\r\n    }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                open={this.state.Snackbaropen}\r\n                autoHideDuration={3000}\r\n                onClose={this.SnackbarClose}\r\n                message ={<span id=\"massage-id\">{this.state.Snackbarmsg}</span>}\r\n                action={[\r\n                    <IconButton \r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.SnackbarClose}\r\n                    >\r\n                    x\r\n                    </IconButton>\r\n                ]}\r\n            /> \r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Employee\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container\">\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId = \"Email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        name=\"Email\"\r\n                                        required\r\n                                        placeholder=\"email\"\r\n                                        onChange={(e) => this.setState({ email: e.target.value })}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId = \"Password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        name=\"Password\"\r\n                                        required\r\n                                        placeholder=\"password\"\r\n                                        onChange={(e) => this.setState({ password: e.target.value })}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId = \"ConfirmPassword\">\r\n                                    <Form.Label>Confirm Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        name=\"ConfirmPassword\"\r\n                                        required\r\n                                        placeholder=\"confirm password\"\r\n                                        onChange={(e) => this.setState({ confirmPassword: e.target.value })}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"Level\">\r\n                                    <Form.Label>Level</Form.Label>\r\n                                    <Form.Control as=\"select\" defaultValue=\"Choose...\" value={this.state.Level} onChange={this.handleChange}>\r\n                                        <option value=\"Manager\">Manager</option>\r\n                                        <option value=\"Employee\">Employee</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>                                 \r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Add Employee\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddModal;","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Services\\AddModal.js",["207"],"import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nclass AddModal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Snackbaropen :false,\r\n            Snackbarmsg:'',\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    SnackbarClose =(e) =>{\r\n        this.setState({\r\n          Snackbaropen:false\r\n        });\r\n      }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch('http://127.0.0.1:5000/add_service/',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Access-Control-Allow-Origin':'*'\r\n            },\r\n            body:JSON.stringify({\r\n                name_service:event.target.Service.value\r\n            })\r\n        })\r\n        .then(res =>res.json())\r\n        .then((result) => {\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'added successfully'\r\n            });\r\n        },\r\n        (error)=>{\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'Failed'\r\n            });\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                open={this.state.Snackbaropen}\r\n                autoHideDuration={3000}\r\n                onClose={this.SnackbarClose}\r\n                message ={<span id=\"massage-id\">{this.state.Snackbarmsg}</span>}\r\n                action={[\r\n                    <IconButton \r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.SnackbarClose}\r\n                    >\r\n                    x\r\n                    </IconButton>\r\n                ]}\r\n            /> \r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Service\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container\">\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId = \"Service\">\r\n                                    <Form.Label>Job Service</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"Service\"\r\n                                        required\r\n                                        placeholder=\"Job Service\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Add Service\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddModal;","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobTime\\AddModal.js",["208"],"import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nclass AddModal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Snackbaropen :false,\r\n            Snackbarmsg:'',\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    SnackbarClose =(e) =>{\r\n        this.setState({\r\n          Snackbaropen:false\r\n        });\r\n      }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch('http://127.0.0.1:5000/add_job_time/',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Access-Control-Allow-Origin':'*'\r\n            },\r\n            body:JSON.stringify({\r\n                job_time:event.target.JobTime.value\r\n            })\r\n        })\r\n        .then(res =>res.json())\r\n        .then((result) => {\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'added successfully'\r\n            });\r\n        },\r\n        (error)=>{\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'Failed'\r\n            });\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                open={this.state.Snackbaropen}\r\n                autoHideDuration={3000}\r\n                onClose={this.SnackbarClose}\r\n                message ={<span id=\"massage-id\">{this.state.Snackbarmsg}</span>}\r\n                action={[\r\n                    <IconButton \r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.SnackbarClose}\r\n                    >\r\n                    x\r\n                    </IconButton>\r\n                ]}\r\n            /> \r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Job Time\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container\">\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId = \"JobTime\">\r\n                                    <Form.Label>Job Time</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"JobTime\"\r\n                                        required\r\n                                        placeholder=\"Job Time\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Add Job Time\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddModal;","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Clients\\EditModal.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobLevel\\JobLevel.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\RequiredAssessment\\RequiredAssessment.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Joboffer\\EditModal.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobTime\\EditModal.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobLevel\\AddModal.js",["209"],"import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nclass AddModal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Snackbaropen :false,\r\n            Snackbarmsg:'',\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    SnackbarClose =(e) =>{\r\n        this.setState({\r\n          Snackbaropen:false\r\n        });\r\n      }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch('http://127.0.0.1:5000/add_job_level/',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Access-Control-Allow-Origin':'*'\r\n            },\r\n            body:JSON.stringify({\r\n                name_job_level:event.target.JobLevel.value\r\n            })\r\n        })\r\n        .then(res =>res.json())\r\n        .then((result) => {\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'added successfully'\r\n            });\r\n        },\r\n        (error)=>{\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'Failed'\r\n            });\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                open={this.state.Snackbaropen}\r\n                autoHideDuration={3000}\r\n                onClose={this.SnackbarClose}\r\n                message ={<span id=\"massage-id\">{this.state.Snackbarmsg}</span>}\r\n                action={[\r\n                    <IconButton \r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.SnackbarClose}\r\n                    >\r\n                    x\r\n                    </IconButton>\r\n                ]}\r\n            /> \r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Job Level\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container\">\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId = \"JobLevel\">\r\n                                    <Form.Label>Job Level</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"JobLevel\"\r\n                                        required\r\n                                        placeholder=\"Job Level\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Add Job Level\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddModal;",["210","211"],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobLevel\\EditModal.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Services\\EditModal.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Category\\Category.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Employee\\EditModal.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Category\\AddModal.js",["212"],"import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nclass AddModal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Snackbaropen :false,\r\n            Snackbarmsg:'',\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    SnackbarClose =(e) =>{\r\n        this.setState({\r\n          Snackbaropen:false\r\n        });\r\n      }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch('http://127.0.0.1:5000/add_job_category/',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Access-Control-Allow-Origin':'*'\r\n            },\r\n            body:JSON.stringify({\r\n                job_category_name:event.target.JobCategory.value\r\n            })\r\n        })\r\n        .then(res =>res.json())\r\n        .then((result) => {\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'added successfully'\r\n            });\r\n        },\r\n        (error)=>{\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'Failed'\r\n            });\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                open={this.state.Snackbaropen}\r\n                autoHideDuration={3000}\r\n                onClose={this.SnackbarClose}\r\n                message ={<span id=\"massage-id\">{this.state.Snackbarmsg}</span>}\r\n                action={[\r\n                    <IconButton \r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.SnackbarClose}\r\n                    >\r\n                    x\r\n                    </IconButton>\r\n                ]}\r\n            /> \r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Category\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container\">\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId = \"JobCategory\">\r\n                                    <Form.Label>Category Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"JobCategory\"\r\n                                        required\r\n                                        placeholder=\"Category Name\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Add Category\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddModal;","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Category\\EditModal.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Category\\AddSkillModal.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Headers\\UserHeader.js",["213"],"import React from \"react\";\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\nclass UserHeader extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\r\n          style={{\r\n            minHeight: \"600px\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center top\"\r\n          }}\r\n        >\r\n          {/* Mask */}\r\n          <span className=\"mask bg-gradient-default opacity-8\" />\r\n          {/* Header container */}\r\n          <Container className=\"d-flex align-items-center\" fluid>\r\n            <Row>\r\n              <Col lg=\"7\" md=\"10\">\r\n                <h1 className=\"display-2 text-white\">Hello</h1>\r\n                <p className=\"text-white mt-0 mb-5\">\r\n                  This is your profile page. You can see the progress you've\r\n                  made with your work and manage your projects or assigned tasks\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default UserHeader;\r\n","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Profile\\Profile.js",["214","215"],"import React from \"react\";\r\nimport EditModal from './EditModal';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Container,\r\n  ButtonToolbar\r\n} from \"reactstrap\";\r\nimport UserHeader from \"../../../components/Headers/UserHeader.js\";\r\n\r\nclass Profile extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        orgtableData: [],\r\n        isLoading:false,\r\n        editModalShow:false,\r\n        old_employee_email:'Lucio_Hettinger@annie.ca',\r\n    }\r\n  }\r\n\r\n  componentWillMount(event){\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    fetch('http://127.0.0.1:5000/search_employee/?email='+this.state.old_employee_email)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      this.setState({\r\n        orgtableData :data,\r\n        isLoading:true,\r\n      });\r\n    });\r\n  }\r\n\r\n  deleteJobOffer(name_job_offer){\r\n    if(window.confirm('Are you sure you want to delete it?')){\r\n      fetch('http://127.0.0.1:5000/delete_job_offer/', {\r\n        method:'POST',\r\n        mode: 'cors',\r\n        headers:new Headers({\r\n            'Content-Type':'application/json',\r\n            'Access-Control-Allow-Origin':'*'\r\n        }),\r\n        body:JSON.stringify({\r\n          name_job_offer:name_job_offer,\r\n        })\r\n      })\r\n      .then(function(response) {\r\n        return response.json()\r\n    })\r\n    .then((result) => {\r\n        this.setState({\r\n            Snackbaropen:true,\r\n            Snackbarmsg:'deleted successfully'\r\n        });\r\n    },\r\n    (error)=>{\r\n        this.setState({\r\n            Snackbaropen:true,\r\n            Snackbarmsg:'Failed'\r\n        });\r\n    })\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const { orgtableData,\r\n            old_employee_email,\r\n            name,\r\n            email,\r\n            level,\r\n            phone_number,\r\n            nationality,\r\n            job_name,\r\n            company_work,\r\n            address,\r\n            linkedin} = this.state;\r\n\r\n    let editModalClose=()=> this.setState({editModalShow:false});\r\n    const isLoading = this.state.isLoading;\r\n\r\n    return (\r\n      <>\r\n        <UserHeader />\r\n        {/* Page content */}\r\n        {isLoading\r\n        ?\r\n        <Container className=\"mt--7\" fluid>        \r\n            <Col className=\"order-xl-1\" xl=\"10\">\r\n              {orgtableData.map((tdata,index) => (\r\n              <Card className=\"bg-secondary shadow\">\r\n                <CardHeader className=\"bg-white border-0\">\r\n                  <Row className=\"align-items-center\">\r\n                    <Col xs=\"8\">\r\n                      <h3 className=\"mb-0\">My account</h3>\r\n                    </Col>\r\n                    <Col className=\"text-right\" xs=\"4\">\r\n                      <ButtonToolbar>\r\n                        <Button\r\n                          onClick={() => this.setState({\r\n                          editModalShow:true,\r\n                          old_employee_email : tdata.email,\r\n                          name:tdata.name,\r\n                          email:tdata.email,\r\n                          level:tdata.level,\r\n                          phone_number:tdata.phone_number,\r\n                          nationality:tdata.nationality,\r\n                          job_name:tdata.job_name,\r\n                          company_work:tdata.company_work,\r\n                          address:tdata.address,\r\n                          linkedin:tdata.linkedin,\r\n                         })}\r\n                          color=\"primary\"\r\n                          size=\"sm\"\r\n                        >\r\n                          Edit Profile\r\n                        </Button>\r\n                        <IconButton aria-label=\"show\">\r\n                          <VisibilityIcon  onClick={() => this.deleteJobOffer(tdata.name_job_offer)}/>\r\n                        </IconButton>\r\n\r\n                        <EditModal \r\n                          show = {this.state.editModalShow}\r\n                          onHide={editModalClose}\r\n                          old_employee_email = {old_employee_email}\r\n                          name = {name}\r\n                          email = {email}\r\n                          level = {level}\r\n                          phone_number = {phone_number}\r\n                          nationality = {nationality}\r\n                          job_name = {job_name}\r\n                          company_work = {company_work}\r\n                          address = {address}\r\n                          linkedin = {linkedin}\r\n                        />\r\n                      </ButtonToolbar>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Form onLoad={this.handleSubmit}>\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      User information\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col lg=\"6\">\r\n                          <Form.Group controlId = \"Username\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control\r\n                              defaultValue={tdata.name}\r\n                              placeholder=\"Username\"\r\n                              type=\"text\"\r\n                              disabled\r\n                              name=\"Username\"\r\n                              required\r\n                            />\r\n                          </Form.Group>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                          <Form.Group controlId = \"Email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={tdata.email}\r\n                              placeholder=\"Email\"\r\n                              type=\"email\"\r\n                              disabled\r\n                              name=\"Email\"\r\n                              required\r\n                            />\r\n                          </Form.Group>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col md=\"12\">\r\n                          <Form.Group controlId = \"Linkedin\">\r\n                            <Form.Label>Linkedin</Form.Label>\r\n                            <Form.Control\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={tdata.linkedin}\r\n                              placeholder=\"Linkedin\"\r\n                              type=\"text\"\r\n                              disabled\r\n                              name=\"Linkedin\"\r\n                              required\r\n                            />\r\n                          </Form.Group>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <hr className=\"my-4\" />\r\n                    {/* Address */}\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      Contact information\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col lg=\"4\">\r\n                          <Form.Group controlId = \"Nationality\">\r\n                            <Form.Label>Nationality</Form.Label>\r\n                            <Form.Control\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={tdata.nationality}\r\n                              placeholder=\"Nationality\"\r\n                              type=\"text\"\r\n                              disabled\r\n                              name=\"Nationality\"\r\n                              required\r\n                            />\r\n                          </Form.Group>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <Form.Group controlId = \"Address\">\r\n                            <Form.Label>Address</Form.Label>\r\n                            <Form.Control\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={tdata.address}\r\n                              placeholder=\"Address\"\r\n                              type=\"text\"\r\n                              disabled\r\n                              name=\"Address\"\r\n                              required\r\n                            />\r\n                          </Form.Group>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <Form.Group controlId = \"PhoneNumber\">\r\n                            <Form.Label>PhoneNumber</Form.Label>\r\n                            <Form.Control\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={tdata.phone_number}\r\n                              placeholder=\"PhoneNumber\"\r\n                              type=\"number\"\r\n                              disabled\r\n                              name=\"PhoneNumber\"\r\n                              required\r\n                            />\r\n                          </Form.Group>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <hr className=\"my-4\" />\r\n                    {/* Description */}\r\n                    <h6 className=\"heading-small text-muted mb-4\">My job information</h6>\r\n                    <div className=\"pl-lg-4\">\r\n                    <Row>\r\n                        <Col lg=\"4\">\r\n                          <Form.Group controlId = \"JobName\">\r\n                            <Form.Label>JobName</Form.Label>\r\n                            <Form.Control\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={tdata.job_name}\r\n                              placeholder=\"JobName\"\r\n                              type=\"text\"\r\n                              disabled\r\n                              name=\"JobName\"\r\n                              required\r\n                            />\r\n                          </Form.Group>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <Form.Group controlId = \"CompanyWork\">\r\n                            <Form.Label>CompanyWork</Form.Label>\r\n                            <Form.Control\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={tdata.company_work}\r\n                              placeholder=\"CompanyWork\"\r\n                              type=\"text\"\r\n                              disabled\r\n                              name=\"CompanyWork\"\r\n                              required\r\n                            />\r\n                          </Form.Group>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <Form.Group controlId = \"level\">\r\n                            <Form.Label>Level</Form.Label>\r\n                            <Form.Control\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={tdata.level}\r\n                              placeholder=\"level\"\r\n                              type=\"number\"\r\n                              disabled\r\n                              name=\"level\"\r\n                              required\r\n                            />\r\n                          </Form.Group>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  </Form>\r\n                </CardBody>\r\n                \r\n              </Card>))}\r\n            </Col>\r\n        </Container>\r\n        :\r\n        <Container className=\"mt--7\" fluid>        \r\n        <Col className=\"order-xl-1\" xl=\"10\">\r\n          <Card className=\"bg-secondary shadow\">\r\n            <CardHeader className=\"bg-white border-0\">\r\n              <Row className=\"align-items-center\">\r\n                <Col xs=\"8\">\r\n                  <h3 className=\"mb-0\">My account</h3>\r\n                </Col>\r\n                <Col className=\"text-right\" xs=\"4\">\r\n                  <ButtonToolbar>\r\n                    <Button\r\n                      onClick={() => this.setState({\r\n                      editModalShow:true,\r\n                     })}\r\n                      color=\"primary\"\r\n                      size=\"sm\"\r\n                    >\r\n                      Edit Profile\r\n                    </Button>\r\n                    <IconButton aria-label=\"show\">\r\n                      <VisibilityIcon  />\r\n                    </IconButton>\r\n\r\n                    <EditModal \r\n                      show = {this.state.editModalShow}\r\n                      onHide={editModalClose}\r\n                    />\r\n                  </ButtonToolbar>\r\n                </Col>\r\n              </Row>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Form onLoad={this.handleSubmit}>\r\n                <h6 className=\"heading-small text-muted mb-4\">\r\n                  User information\r\n                </h6>\r\n                <div className=\"pl-lg-4\">\r\n                  <Row>\r\n                    <Col lg=\"6\">\r\n                      <Form.Group controlId = \"Username\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control\r\n                          defaultValue=\"none\"\r\n                          placeholder=\"Username\"\r\n                          type=\"text\"\r\n                          disabled\r\n                          name=\"Username\"\r\n                          required\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                      <Form.Group controlId = \"Email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                          className=\"form-control-alternative\"\r\n                          defaultValue=\"none\"\r\n                          placeholder=\"Email\"\r\n                          type=\"email\"\r\n                          disabled\r\n                          name=\"Email\"\r\n                          required\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <Form.Group controlId = \"Linkedin\">\r\n                        <Form.Label>Linkedin</Form.Label>\r\n                        <Form.Control\r\n                          className=\"form-control-alternative\"\r\n                          defaultValue=\"none\"\r\n                          placeholder=\"Linkedin\"\r\n                          type=\"text\"\r\n                          disabled\r\n                          name=\"Linkedin\"\r\n                          required\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n                <hr className=\"my-4\" />\r\n                {/* Address */}\r\n                <h6 className=\"heading-small text-muted mb-4\">\r\n                  Contact information\r\n                </h6>\r\n                <div className=\"pl-lg-4\">\r\n                  <Row>\r\n                    <Col lg=\"4\">\r\n                      <Form.Group controlId = \"Nationality\">\r\n                        <Form.Label>Nationality</Form.Label>\r\n                        <Form.Control\r\n                          className=\"form-control-alternative\"\r\n                          defaultValue=\"none\"\r\n                          placeholder=\"Nationality\"\r\n                          type=\"text\"\r\n                          disabled\r\n                          name=\"Nationality\"\r\n                          required\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col lg=\"4\">\r\n                      <Form.Group controlId = \"Address\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control\r\n                          className=\"form-control-alternative\"\r\n                          defaultValue=\"none\"\r\n                          placeholder=\"Address\"\r\n                          type=\"text\"\r\n                          disabled\r\n                          name=\"Address\"\r\n                          required\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col lg=\"4\">\r\n                      <Form.Group controlId = \"PhoneNumber\">\r\n                        <Form.Label>PhoneNumber</Form.Label>\r\n                        <Form.Control\r\n                          className=\"form-control-alternative\"\r\n                          defaultValue={-1}\r\n                          placeholder=\"PhoneNumber\"\r\n                          type=\"number\"\r\n                          disabled\r\n                          name=\"PhoneNumber\"\r\n                          required\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n                <hr className=\"my-4\" />\r\n                {/* Description */}\r\n                <h6 className=\"heading-small text-muted mb-4\">My job information</h6>\r\n                <div className=\"pl-lg-4\">\r\n                <Row>\r\n                    <Col lg=\"4\">\r\n                      <Form.Group controlId = \"JobName\">\r\n                        <Form.Label>JobName</Form.Label>\r\n                        <Form.Control\r\n                          className=\"form-control-alternative\"\r\n                          defaultValue=\"0\"\r\n                          placeholder=\"JobName\"\r\n                          type=\"text\"\r\n                          disabled\r\n                          name=\"JobName\"\r\n                          required\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col lg=\"4\">\r\n                      <Form.Group controlId = \"CompanyWork\">\r\n                        <Form.Label>CompanyWork</Form.Label>\r\n                        <Form.Control\r\n                          className=\"form-control-alternative\"\r\n                          defaultValue=\"none\"\r\n                          placeholder=\"CompanyWork\"\r\n                          type=\"text\"\r\n                          disabled\r\n                          name=\"CompanyWork\"\r\n                          required\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col lg=\"4\">\r\n                      <Form.Group controlId = \"level\">\r\n                        <Form.Label>Level</Form.Label>\r\n                        <Form.Control\r\n                          className=\"form-control-alternative\"\r\n                          defaultValue={-1}\r\n                          placeholder=\"level\"\r\n                          type=\"number\"\r\n                          disabled\r\n                          name=\"level\"\r\n                          required\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Container>                \r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n\r\n/*\r\n{tableData.map((tdata,index) => (\r\n*/","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Profile\\EditModal.js",[],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":5,"column":3,"nodeType":"222","messageId":"223","endLine":5,"endColumn":9},{"ruleId":"220","severity":1,"message":"224","line":6,"column":3,"nodeType":"222","messageId":"223","endLine":6,"endColumn":7},{"ruleId":"220","severity":1,"message":"225","line":7,"column":3,"nodeType":"222","messageId":"223","endLine":7,"endColumn":13},{"ruleId":"220","severity":1,"message":"226","line":8,"column":3,"nodeType":"222","messageId":"223","endLine":8,"endColumn":11},{"ruleId":"220","severity":1,"message":"227","line":9,"column":3,"nodeType":"222","messageId":"223","endLine":9,"endColumn":12},{"ruleId":"220","severity":1,"message":"228","line":14,"column":3,"nodeType":"222","messageId":"223","endLine":14,"endColumn":17},{"ruleId":"220","severity":1,"message":"229","line":15,"column":3,"nodeType":"222","messageId":"223","endLine":15,"endColumn":12},{"ruleId":"220","severity":1,"message":"230","line":21,"column":3,"nodeType":"222","messageId":"223","endLine":21,"endColumn":8},{"ruleId":"220","severity":1,"message":"231","line":27,"column":3,"nodeType":"222","messageId":"223","endLine":27,"endColumn":11},{"ruleId":"220","severity":1,"message":"232","line":28,"column":3,"nodeType":"222","messageId":"223","endLine":28,"endColumn":8},{"ruleId":"220","severity":1,"message":"233","line":34,"column":5,"nodeType":"222","messageId":"223","endLine":34,"endColumn":7},{"ruleId":"220","severity":1,"message":"234","line":75,"column":13,"nodeType":"222","messageId":"223","endLine":75,"endColumn":20},{"ruleId":"216","replacedBy":"235"},{"ruleId":"218","replacedBy":"236"},{"ruleId":"220","severity":1,"message":"237","line":5,"column":8,"nodeType":"222","messageId":"223","endLine":5,"endColumn":16},{"ruleId":"220","severity":1,"message":"238","line":1,"column":16,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"239","line":2,"column":24,"nodeType":"222","messageId":"223","endLine":2,"endColumn":27},{"ruleId":"220","severity":1,"message":"240","line":2,"column":29,"nodeType":"222","messageId":"223","endLine":2,"endColumn":32},{"ruleId":"220","severity":1,"message":"241","line":2,"column":34,"nodeType":"222","messageId":"223","endLine":2,"endColumn":38},{"ruleId":"242","severity":1,"message":"243","line":5,"column":5,"nodeType":"244","messageId":"245","endLine":7,"endColumn":6},{"ruleId":"220","severity":1,"message":"238","line":1,"column":16,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"246","line":5,"column":9,"nodeType":"222","messageId":"223","endLine":5,"endColumn":14},{"ruleId":"220","severity":1,"message":"221","line":13,"column":3,"nodeType":"222","messageId":"223","endLine":13,"endColumn":9},{"ruleId":"220","severity":1,"message":"246","line":5,"column":9,"nodeType":"222","messageId":"223","endLine":5,"endColumn":14},{"ruleId":"220","severity":1,"message":"246","line":5,"column":9,"nodeType":"222","messageId":"223","endLine":5,"endColumn":14},{"ruleId":"220","severity":1,"message":"238","line":1,"column":16,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"238","line":1,"column":16,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"238","line":1,"column":16,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"238","line":1,"column":16,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"238","line":1,"column":16,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"216","replacedBy":"247"},{"ruleId":"218","replacedBy":"248"},{"ruleId":"220","severity":1,"message":"238","line":1,"column":16,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"221","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":16},{"ruleId":"220","severity":1,"message":"249","line":5,"column":8,"nodeType":"222","messageId":"223","endLine":5,"endColumn":25},{"ruleId":"220","severity":1,"message":"250","line":6,"column":9,"nodeType":"222","messageId":"223","endLine":6,"endColumn":14},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'DropdownToggle' is defined but never used.","'FormGroup' is defined but never used.","'Media' is defined but never used.","'Progress' is defined but never used.","'Table' is defined but never used.","'ps' is defined but never used.","'bgColor' is assigned a value but never used.",["251"],["252"],"'AddModal' is defined but never used.","'Component' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Alert' is defined but never used.",["251"],["252"],"'VisibilityOffIcon' is defined but never used.","'Modal' is defined but never used.","no-global-assign","no-unsafe-negation"]